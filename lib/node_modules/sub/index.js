let electron = require('electron');
const ipcRenderer = electron.ipcRenderer;
let fs = require('fs');

const SubViewer = function()
{
    if (!(this instanceof SubViewer))
    {
        return new SubViewer();
    }
    this.main_directory_path = '';
    this.current_illust_id = 0;
    this.viewer = document.body;
    this.title = document.getElementById('title');
    this.caption = document.getElementById('caption');
    this.tags = document.getElementById('tags-container');
};

SubViewer.prototype.showCaption = function(innerHTML)
{
    this.caption.innerHTML = innerHTML;
};

let mainViewer = new SubViewer();

ipcRenderer.on('main_directory', function(ev, message)
{
    mainViewer.main_directory_path = message;
});

ipcRenderer.on('illust_id', function(ev, message)
{
    console.log(message + '受け取った');
    if (mainViewer.current_illust_id === message)
    {
        return;
    }
    mainViewer.current_illust_id = message;
    const FILE_MAX = 100000000000;
    const DIR_MAX = 100000;
    const directory = Math.floor((FILE_MAX - mainViewer.current_illust_id) / DIR_MAX);
    const file = (FILE_MAX - mainViewer.current_illust_id);
    console.log(directory);
    console.log(file);
    const file_name = `${mainViewer.main_directory_path}/${directory}/${file}_${mainViewer.current_illust_id}.json`;
    console.log(file_name);
    fs.readFile(file_name, 'utf-8', function(err, data)
    {
        if (err)
        {
            console.error(err);
            return;
        }
        const parsedData = JSON.parse(data);
        mainViewer.title.setAttribute('href', `https://www.pixiv.net/artworks/${parsedData.id}`);
        mainViewer.title.setAttribute('target', '_blank');
        mainViewer.title.innerText = parsedData.title;
        mainViewer.caption.innerText = parsedData.caption;
        mainViewer.tags.innerText = parsedData.tags.map(function(tag)
        {
            return tag.name;
        }).join(',');
    });
});
